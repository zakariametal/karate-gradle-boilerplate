buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'scala'

  repositories {
    mavenCentral()
    jcenter()
  }

  sourceSets {
    test {
      resources {
        srcDir file('src/test/java')
        exclude '**/*.java'
        exclude '**/*.scala'
      }
    }
  }

  ext {
    karateVersion = '0.9.5'
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation "com.intuit.karate:karate-junit5:${karateVersion}"
    testImplementation "com.intuit.karate:karate-apache:${karateVersion}"
    testImplementation "com.intuit.karate:karate-gatling:${karateVersion}"
    testImplementation 'net.masterthought:cucumber-reporting:3.8.0'
  }

  task loadtestRun(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'io.gatling.app.Gatling'
    doFirst {
      group = 'Web Tests'
      description = 'Run Gatling Tests'
      println "Running simulation [${SIM_NAME}]"
      new File("${buildDir}/reports/gatling").mkdirs()
      args = [
      '-s', "${SIM_NAME}",
      '-rf', "${buildDir}/reports/gatling"
    ]
      //  systemProperty "karate.options", System.getProperty("karate.options")
      systemProperties System.properties
    }
  }

  test {
    useJUnitPlatform()
    systemProperties System.properties
    outputs.upToDateWhen { false }
    testLogging {
      showStandardStreams = true
    }
    systemProperty 'project.name', project.name
    systemProperty 'project.dir', project.projectDir.absolutePath
    systemProperty 'build.dir', project.buildDir.absolutePath
  }

  task karateDebug(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.intuit.karate.cli.Main'
  }

  tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
  }
}
